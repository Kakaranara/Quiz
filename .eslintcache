[{"D:\\React\\quiz\\src\\index.js":"1","D:\\React\\quiz\\src\\reportWebVitals.js":"2","D:\\React\\quiz\\src\\App.js":"3","D:\\React\\quiz\\src\\timer.js":"4"},{"size":500,"mtime":499162500000,"results":"5","hashOfConfig":"6"},{"size":362,"mtime":499162500000,"results":"7","hashOfConfig":"6"},{"size":328,"mtime":1606882861282,"results":"8","hashOfConfig":"6"},{"size":3741,"mtime":1606890584403,"results":"9","hashOfConfig":"6"},{"filePath":"10","messages":"11","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},"1xs183x",{"filePath":"13","messages":"14","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"12"},{"filePath":"17","messages":"18","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"19"},"D:\\React\\quiz\\src\\index.js",[],["20","21"],"D:\\React\\quiz\\src\\reportWebVitals.js",[],"D:\\React\\quiz\\src\\App.js",[],"D:\\React\\quiz\\src\\timer.js",["22"],"import { ArrowRight } from '@material-ui/icons';\r\nimport React from 'react';\r\nimport ArrowBackIosIcon from '@material-ui/icons/ArrowBackIos';\r\nimport ArrowForwardIosIcon from '@material-ui/icons/ArrowForwardIos';\r\n\r\n/*class Timer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            count: 0,\r\n            date: new Date().toLocaleString()\r\n        }\r\n        this.pause.bind(this)\r\n        this.start.bind(this)\r\n        this.reset.bind(this)\r\n    }\r\n\r\n    pause = () => { \r\n        clearInterval(this.myInterval);\r\n    };\r\n\r\n    reset = () => {\r\n        \r\n        clearInterval(this.myInterval);\r\n        this.setState({\r\n            count: 0\r\n        })\r\n    };\r\n\r\n    start = () => {\r\n        this.myInterval = setInterval(()=>{\r\n            this.setState(prevState=>({\r\n                count: prevState.count - 1,\r\n            }))\r\n        },1000);\r\n    }\r\n\r\n    increment = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n\r\n    decrement = () => {\r\n        this.setState({\r\n            count: this.state.count - 1\r\n        })\r\n    }\r\n\r\n    componentDidMount(){\r\n        this.myInterval = setInterval(()=>{\r\n            this.setState(prevState=>({\r\n                count: prevState.count + 1,\r\n                date: new Date().toLocaleString(),\r\n            }))\r\n        },1000);\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ArrowBackIosIcon onClick={this.decrement}/>\r\n                <span>{this.state.count}</span> \r\n                <ArrowForwardIosIcon onClick={this.increment}/>\r\n                <br/>\r\n                <button onClick={this.start}>Start</button>\r\n                <button onClick={this.pause}>Pause</button>\r\n                <button onClick={this.reset}>Reset</button>\r\n                <br/>\r\n                <span>{this.state.date}</span>\r\n            </div>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nexport default Timer; */\r\n\r\nclass Timer extends React.Component{\r\n    constructor(props){\r\n        super(props);\r\n        this.state = {\r\n            count: 0,\r\n            date: new Date().toLocaleString()\r\n        }\r\n        this.pause.bind(this)\r\n        this.start.bind(this)\r\n        this.reset.bind(this)\r\n    }\r\n\r\n    pause = () => { \r\n        clearInterval(this.myInterval);\r\n    };\r\n\r\n    reset = () => {\r\n        \r\n        clearInterval(this.myInterval);\r\n        this.setState({\r\n            count: 0\r\n        })\r\n    };\r\n\r\n    start = () => {\r\n        this.myInterval = setInterval(()=>{\r\n            this.setState(prevState=>({\r\n                count: prevState.count - 1,\r\n            }))\r\n        },1000);\r\n    }\r\n\r\n    increment = () => {\r\n        this.setState({\r\n            count: this.state.count + 1\r\n        })\r\n    }\r\n\r\n    decrement = () => {\r\n        this.setState({\r\n            count: this.state.count - 1\r\n        })\r\n    }\r\n\r\n    /*componentDidMount(){\r\n        this.myInterval = setInterval(()=>{\r\n            this.setState(prevState=>({\r\n                count: prevState.count + 1,\r\n                date: new Date().toLocaleString(),\r\n            }))\r\n        },1000);\r\n    }*/\r\n\r\n    render(){\r\n        return(\r\n            <div>\r\n                <ArrowBackIosIcon onClick={this.decrement}/>\r\n                <span>{this.state.count}</span> \r\n                <ArrowForwardIosIcon onClick={this.increment}/>\r\n                <br/>\r\n                <button onClick={this.start}>Start</button>\r\n                <button onClick={this.pause}>Pause</button>\r\n                <button onClick={this.reset}>Reset</button>\r\n                <br/>\r\n                <span>{this.state.date}</span>\r\n            </div>\r\n        );\r\n    }\r\n   \r\n}\r\n\r\nexport default Timer;\r\n",{"ruleId":"23","replacedBy":"24"},{"ruleId":"25","replacedBy":"26"},{"ruleId":"27","severity":1,"message":"28","line":1,"column":10,"nodeType":"29","messageId":"30","endLine":1,"endColumn":20},"no-native-reassign",["31"],"no-negated-in-lhs",["32"],"no-unused-vars","'ArrowRight' is defined but never used.","Identifier","unusedVar","no-global-assign","no-unsafe-negation"]